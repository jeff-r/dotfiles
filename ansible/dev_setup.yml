---
- name: Setup Debian Trixie Dev Machine
  hosts: localhost
  connection: local
  vars:
    # Change this to your dotfiles repository URL
    dotfiles_repo: "https://github.com/jeff-r/dotfiles.git"
    dotfiles_dest: "{{ ansible_env.HOME }}/dotfiles"
    user: "{{ ansible_env.USER }}"

  tasks:
    - name: Update apt cache and upgrade packages
      become: yes
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
      tags:
        - system

    - name: Install core development packages
      become: yes
      ansible.builtin.apt:
        pkg:
          - build-essential
          - git
          - git-delta
          - curl
          - gnupg
          - apt-transport-https
          - ca-certificates
          - libssl-dev
          - zlib1g-dev
          - libreadline-dev
          - libyaml-dev
          - libsqlite3-dev
          - sqlite3
          - libxml2-dev
          - libxslt1-dev
          - libcurl4-openssl-dev
          - libffi-dev
          - ncurses-dev
          - tmux
          - stow
          - neovim
          - zsh
          - tree
      tags:
        - dev_tools

    - name: Install rbenv and ruby-build
      ansible.builtin.git:
        repo: https://github.com/rbenv/rbenv.git
        dest: "{{ ansible_env.HOME }}/.rbenv"
        depth: 1
      register: rbenv_installed
      tags:
        - rbenv

    - name: Install ruby-build plugin
      ansible.builtin.git:
        repo: https://github.com/rbenv/ruby-build.git
        dest: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
        depth: 1
      tags:
        - rbenv

    - name: Configure rbenv in shell
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.profile"
        line: 'export PATH="$HOME/.rbenv/bin:$PATH"'
        create: yes
        state: present
      tags:
        - rbenv

    - name: Add rbenv init to shell
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.profile"
        line: 'eval "$(rbenv init -)"'
        create: yes
        state: present
      tags:
        - rbenv

    - name: Install Ruby 3.3.6
      ansible.builtin.command:
        cmd: "{{ ansible_env.HOME }}/.rbenv/bin/rbenv install 3.3.6"
        creates: "{{ ansible_env.HOME }}/.rbenv/versions/3.3.6"
      args:
        chdir: "{{ ansible_env.HOME }}"
      become: no
      tags:
        - rbenv
        - ruby

    - name: Install NVM (Node Version Manager)
      ansible.builtin.shell:
        cmd: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
      args:
        chdir: "{{ ansible_env.HOME }}"
      tags:
        - nvm

#    - name: Install Node.js v22.12
#      ansible.builtin.shell:
#        cmd: |
#          . "{{ ansible_env.HOME }}/.nvm/nvm.sh" && nvm install 22.12
#        executable: /bin/bash
#      args:
#        chdir: "{{ ansible_env.HOME }}"
#      tags:
#        - nvm

    - name: Set zsh as the default shell for the user
      become: yes
      ansible.builtin.user:
        name: "{{ user }}"
        shell: /usr/bin/zsh
      tags:
        - zsh

    - name: Install Oh My Zsh
      ansible.builtin.shell:
        cmd: |
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        creates: "{{ ansible_env.HOME }}/.oh-my-zsh"
      args:
        chdir: "{{ ansible_env.HOME }}"
      tags:
        - zsh


    - name: Check if Node.js v22.12 is installed
      ansible.builtin.shell:
        cmd: >
          source "{{ ansible_env.HOME }}/.nvm/nvm.sh" && nvm list | grep "v22.12."
      args:
        executable: /bin/bash
      register: nvm_version_check
      failed_when: false
      changed_when: false
      tags:
        - nvm

    - name: Install Node.js v22.12
      ansible.builtin.shell:
        cmd: >
          source "{{ ansible_env.HOME }}/.nvm/nvm.sh" && nvm install 22.12
      args:
        executable: /bin/bash
      when: nvm_version_check.rc != 0
      tags:
        - nvm

    # - name: Checkout dotfiles repository
    #   ansible.builtin.git:
    #     repo: "{{ dotfiles_repo }}"
    #     dest: "{{ dotfiles_dest }}"
    #     clone: yes
    #     update: yes
    #   tags:
    #     - dotfiles

    - name: Create the keyrings directory
      become: yes
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      tags:
        - docker
    
    - name: Download Docker's GPG key
      become: yes
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        force: yes
      tags:
        - docker
    
    - name: Add Docker APT repository
      become: yes
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        update_cache: yes
      tags:
        - docker
    
    - name: Install Docker Engine and related packages
      become: yes
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      tags:
        - docker
    
    - name: Add current user to the docker group
      become: yes
      ansible.builtin.user:
        name: "{{ user }}"
        groups: docker
        append: yes
      tags:
        - docker

    - name: Create the keyrings directory for 1Password
      become: yes
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      tags:
        - 1password
    
    - name: Download 1Password GPG key
      become: yes
      ansible.builtin.get_url:
        url: https://downloads.1password.com/linux/keys/1password.asc
        dest: /etc/apt/keyrings/1password.asc
        mode: '0644'
        force: yes
      tags:
        - 1password
    
    - name: Add 1Password APT repository
      become: yes
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/1password.asc] https://downloads.1password.com/linux/debian/amd64 stable main"
        state: present
        update_cache: yes
      tags:
        - 1password
    
    - name: Install 1Password CLI
      become: yes
      ansible.builtin.apt:
        name: 1password-cli
        state: present
      tags:
        - 1password
